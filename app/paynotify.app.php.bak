<?php

/**
 *    支付网关通知接口
 *
 *    @author    Garbin
 *    @usage    none
 */
class PaynotifyApp extends MallbaseApp
{
    /**
     *    支付完成后返回的URL，在此只进行提示，不对订单进行任何修改操作,这里不严格验证，不改变订单状态
     *
     *    @author    Garbin
     *    @return    void
     */
    function index()
    {
        //这里是支付宝，财付通等当订单状态改变时的通知地址
        $order_id   = isset($_GET['order_id']) ? intval($_GET['order_id']) : 0; //哪个订单
        if (!$order_id)
        {
            /* 无效的通知请求 */
            $this->show_warning('forbidden');

            return;
        }

        /* 获取订单信息 */
        $model_order =& m('order');
        $order_info  = $model_order->get($order_id);
        if (empty($order_info))
        {
            /* 没有该订单 */
            $this->show_warning('forbidden');

            return;
        }

        $model_payment =& m('payment');
        $payment_info  = $model_payment->get("payment_code='{$order_info['payment_code']}' AND store_id = 0");
        if (empty($payment_info))
        {
            /* 没有指定的支付方式 */
            $this->show_warning('no_such_payment');

            return;
        }

        /* 调用相应的支付方式 */
        $payment = $this->_get_payment($order_info['payment_code'], $payment_info);

        /* 获取验证结果 */
        $notify_result = $payment->verify_notify($order_info);
        if ($notify_result === false)
        {
            /* 支付失败 */
            $this->show_warning($payment->get_error());

            return;
        }

        #TODO 临时在此也改变订单状态为方便调试，实际发布时应把此段去掉，订单状态的改变以notify为准
        //$this->_change_order_status($order_id, $order_info['extension'], $notify_result);

        /* 只有支付时会使用到return_url，所以这里显示的信息是支付成功的提示信息 */
        $this->_curlocal(LANG::get('pay_successed'));
        $this->assign('order', $order_info);
        $this->assign('payment', $payment_info);
        $this->display('paynotify.index.html');
    }
	
	//写日志方法
	function log_result($word) 
	{
		$fp = fopen("logq.txt","a");
		flock($fp, LOCK_EX) ;
		fwrite($fp,"执行日期：".strftime("%Y%m%d%H%M%S",time())."\n".$word."\n");
		flock($fp, LOCK_UN);
		fclose($fp);
	}

    /**
     *    支付完成后，外部网关的通知地址，在此会进行订单状态的改变，这里严格验证，改变订单状态
     *
     *    @author    Garbin
     *    @return    void
     */
    function notify()
    {
        //这里是支付宝，财付通等当订单状态改变时的通知地址
        $order_id   = 0;
        if(isset($_POST['order_id']))
        {
            $order_id = intval($_POST['order_id']);
        }
        else
        {
            $order_id = intval($_GET['order_id']);
        }
        if (!$order_id)
        {
            /* 无效的通知请求 */
            $this->show_warning('no_such_order');
            return;
        }
        /* 获取订单信息 */
        $model_order =& m('order');
        $order_info  = $model_order->get($order_id);
        if (empty($order_info))
        {
            /* 没有该订单 */
            $this->show_warning('no_such_order');
            return;
        }
        $model_payment =& m('payment');
        $payment_info  = $model_payment->get("payment_code='{$order_info['payment_code']}' AND store_id= 0");
        if (empty($payment_info))
        {
            /* 没有指定的支付方式 */
            $this->show_warning('no_such_payment');
            return;
        }
        /* 调用相应的支付方式 */
        $payment = $this->_get_payment($order_info['payment_code'], $payment_info);

        /* 获取验证结果 */
        $notify_result = $payment->verify_notify($order_info, true);
        if ($notify_result === false)
        {
            /* 支付失败 */
            $payment->verify_result(false);
            return;
        }
        //改变订单状态
        $this->_change_order_status($order_id, $order_info['extension'], $notify_result);
        $payment->verify_result(true);
        if ($notify_result['target'] == ORDER_ACCEPTED)
        {
            /* 发送邮件给卖家，提醒付款成功 */
            $model_member =& m('member');
            $seller_info  = $model_member->get($order_info['seller_id']);

            $mail = get_mail('toseller_online_pay_success_notify', array('order' => $order_info));
            $this->_mailto($seller_info['email'], addslashes($mail['subject']), addslashes($mail['message']));

            /* 同步发送 */
            $this->_sendmail(true);
        }
    }

    function notifys()
    {
		$this->log_result('1');
		$cz_id   = '';
		if(isset($_POST['order_id']))
        {
            $cz_id = $_POST['order_id'];
        }
        else
        {
            $cz_id = $_GET['order_id'];
        }
		if($cz_id==0)
		{
		    $this->log_result("2");
			/* 无效的通知请求 */
            $this->show_warning('没有此相关充值信息');
            return;
		}
		/*获取充值信息*/
		$this->log_result("3");
		$cz_log_model =& m('mymoney_czlog');
        $order_info_detail  = $cz_log_model->get("cz_id='".$cz_id."'");
		if (empty($order_info_detail))
        {
            /* 没有该信息 */
			$this->log_result('4');
            $this->show_warning('没有此相关充值信息');
            return;
        }
		$order_info['out_trade_sn']=$order_info_detail['czmoney_id'];
		$order_info['order_amount']=$order_info_detail['cz_price'];
		$user_id   = $order_info_detail['user_id'];
		$user_name = $order_info_detail['user_name'];
		$this->log_result("5");
		/* 调用相应的支付方式 */
		$model_payment =& m('payment');
		$this->my_moneylog_mod =& m('my_moneylog');
		$this->my_money_mod =& m('my_money');
        $payment_info  = $model_payment->get("payment_code='".$order_info_detail['payment_code']."' AND store_id = 0");
        if (empty($payment_info))
        {
			$this->log_result("6");
            /* 没有指定的支付方式 */
            $this->show_warning('no_such_payment');
            return;
        }
		/* 调用相应的支付方式 */
		$this->log_result("7");
        $payment = $this->_get_payment($order_info_detail['payment_code'], $payment_info);
		$notify_result = $payment->verify_notify($order_info, true,1);
		if ($notify_result === false)
        {
			$this->log_result("8");
            /* 支付失败 */
            $payment->verify_result(false);
            return;
        }
		$this->log_result("9");
		$log_row=$this->my_moneylog_mod->getrow("select * from ".DB_PREFIX."my_moneylog");	
		$this->log_result("10.1");
		//验证成功
		//获取支付宝的反馈参数
		$dingdan           = $_POST['out_trade_no'];	//获取支付宝传递过来的订单号
		$total_fee         = $_POST['total_fee'];			//获取支付宝传递过来的总价格
$this->log_result("10.2");
		//检测定单是否重复提交
		$order_row=$this->my_moneylog_mod->getrow("select * from ".DB_PREFIX."my_moneylog where user_id='$user_id' and order_sn='".$dingdan."'");
		
		if (!empty($order_row))
		{
			$this->log_result("10");
			/* 没有指定的支付方式 */
			$this->show_warning('不能重复提交');
			return;
		}
		$this->log_result("11");
		$user_row=$this->my_money_mod->getrow("select money from ".DB_PREFIX."my_money where user_id='$user_id'");	
		$user_money=$user_row['money'];
		$new_money=$user_money+$total_fee;
		$edit_mymoney=array(
			'money'=>$new_money,																	
		);
		$this->my_money_mod->edit('user_id='.$user_id,$edit_mymoney);
		 //添加日志
		$log_text =$user_name.Lang::get('tongguoalipaychongzhi').$total_fee.Lang::get('yuan');
		$add_mymoneylog=array(
			'user_id'=>$user_id,
			'user_name'=>$user_name,
			'buyer_name'=>Lang::get('alipay').$total_fee,
			'seller_id'=>$user_id,
			'seller_name'=>$user_name,
			'order_sn '=>$dingdan,
			'add_time'=>time(),
			'leixing'=>30,		
			'money_zs'=>$total_fee,
			'money'=>$total_fee,
			'log_text'=>$log_text,		
			'caozuo'=>4,	
			's_and_z'=>1,																		
		);
		$this->my_moneylog_mod->add($add_mymoneylog);
		$this->log_result("12");
	}

    /**
     *    改变订单状态
     *
     *    @author    Garbin
     *    @param     int $order_id
     *    @param     string $order_type
     *    @param     array  $notify_result
     *    @return    void
     */
    function _change_order_status($order_id, $order_type, $notify_result)
    {
        /* 将验证结果传递给订单类型处理 */
        $order_type  =& ot($order_type);
        $order_type->respond_notify($order_id, $notify_result);    //响应通知
    }
}

?>
